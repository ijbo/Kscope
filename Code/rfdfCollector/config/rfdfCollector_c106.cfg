{
    "rfdataframeDetails": {
        "Rfdf_IP": "",
        "Rfdf_Port": "",
        "Rfdf_Container": "rfdataframe_v1",
        "Rfdf_file_path": ""
    },
    "archiveStorage": {
        "targetHost": "192.168.7.127",
        "targetFilepath": "/home/archive/Dell/Kaleidoscope",
        "basePath": "",
        "fileOperation": "mv"
    },
    "System load": {
        "stress": ""
    },
    "collectorParams": {
        "reloadCfg": "on",
        "dctimezone": "UTC",
        "refreshTime": "time",
        "dfHeadcopy": "True/False",
        "readelapseTime": "1mi",
        "acfRDfilePath": "/home/rfdfCollector/RD",
        "baseDataPath": "/home/rfDataframe/data",
        "baseConfigPath": "/home/rfDataframe/config",
        "instanceId": [
            "E101",
            "E102",
            "C101",
            "C102",
            "C103",
            "C104",
            "C105",
            "C106",
            "C107",
            "C108",
            "C109",
            "C110"
        ],
        "logLevel": [
            "INFO",
            "DEBUG",
            "ERROR",
            "FATAL"
        ],
        "logSize": "MB",
        "collectionTime": null,
        "stepSize": "15mi",
        "runningInstanceId": {
            "Instance_Id": "C106",
            "Process_Id": 1922
        },
        "recoveryMode": "off",
        "customConfig": "/home/rfDataframe/config/C106/1922/20200910100453",
        "rfdftempPath": "/home/rfDataframe/data/C106/1922/20200910100453/temp",
        "checksum": "d5eea6f41df41c45913245651e052f17",
        "hosttempPath": "/home/web/calsoft/data/C106/1922/20200910100453/temp"
    },
    "logging": {
        "version": 1,
        "formatters": {
            "default": {
                "format": "%(asctime)s | %(levelname)s | Id:%(instance_id)s | uniqueid:%(uid)s | %(funcName)s():%(lineno)s | PID:%(process)d | %(message)s",
                "datefmt": "%Y%m%d%H%M%S"
            }
        },
        "handlers": {
            "console": {
                "level": "INFO",
                "class": "logging.StreamHandler",
                "formatter": "default",
                "stream": "ext://sys.stdout"
            }
        },
        "loggers": {
            "rfdfCollector": {
                "level": "DEBUG",
                "handlers": [
                    "console"
                ]
            }
        },
        "disable_existing_loggers": "False"
    },
    "job": {
        "executionMode": {
            "type": "historical",
            "startTime": "2020-09-10 00:30:00",
            "endTime": ""
        },
        "outputFolder": "./data",
        "fileNamePrefix": "dataframes",
        "outputMultipleFiles": false,
        "logfileNamePrefix": "lclog",
        "fillNull": true,
        "compressDataframe": false,
        "lcLogs": "ON"
    },
    "database": {
        "connection": {
            "name": "influxdb",
            "protocol": "http",
            "host": "172.17.0.2",
            "port": "8086",
            "database": "metrics",
            "username": "admin",
            "password": "password"
        },
        "query": {
            "sampleInterval": null,
            "aggregationFunction": null,
            "fillType": null,
            "deleteAfter": false
        },
        "servers": [
            "192.168.13.202"
        ]
    },
    "redfish": [
        {
            "metricReport": "CPUMemMetrics",
            "metrics": [
                "CPUC0ResidencyHigh",
                "CPUC0ResidencyLow"
            ]
        },
        {
            "metricReport": "FanSensor",
            "metrics": [
                "RPMReading"
            ]
        },
        {
            "metricReport": "PowerMetrics",
            "metrics": [
                "SystemPowerConsumption",
                "TotalCPUPower",
                "TotalFanPowerTotalStoragePower"
            ]
        },
        {
            "metricReport": "CPUSensor",
            "metrics": [
                "TemperatureReading"
            ]
        }
    ],
    "lcLogMeasurements": [
        "LClogdata"
    ]
}